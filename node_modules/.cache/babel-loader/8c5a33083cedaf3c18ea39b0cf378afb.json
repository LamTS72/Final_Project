{"ast":null,"code":"import axios from \"axios\";\nimport { ACCESSTOKEN, DOMAIN } from \"../util/setting\";\nexport class baseService {\n  constructor() {\n    this.get = url => {\n      let promise = axios({\n        url: `${DOMAIN}${url}`,\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem(ACCESSTOKEN)}`\n        }\n      });\n      return promise;\n    };\n\n    this.get2 = url => {\n      let promise = axios({\n        url: `${DOMAIN}${url}`,\n        method: 'GET'\n      });\n      return promise;\n    };\n\n    this.post = (url, data) => {\n      let promise = axios({\n        url: `${DOMAIN}${url}`,\n        method: 'POST',\n        data: data,\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem(ACCESSTOKEN)}`\n        }\n      });\n      return promise;\n    };\n\n    this.post2 = (url, data) => {\n      let promise = axios({\n        url: `${DOMAIN}${url}`,\n        method: 'POST',\n        data: data\n      });\n      return promise;\n    };\n\n    this.put = (url, data) => {\n      let promise = axios({\n        url: `${DOMAIN}${url}`,\n        method: 'PUT',\n        data: data,\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem(ACCESSTOKEN)}`\n        }\n      });\n      return promise;\n    };\n\n    this.put2 = (url, data) => {\n      let promise = axios({\n        url: `${DOMAIN}${url}`,\n        method: 'PUT',\n        data: data\n      });\n      return promise;\n    };\n\n    this.delete = url => {\n      let promise = axios({\n        url: `${DOMAIN}${url}`,\n        method: 'DELETE',\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem(ACCESSTOKEN)}`\n        }\n      });\n      return promise;\n    };\n  } // PHƯƠNG THỨC GET\n\n\n}","map":{"version":3,"sources":["C:/Users/Windows/Desktop/FE/SE_project-1-main/src/services/baseService.js"],"names":["axios","ACCESSTOKEN","DOMAIN","baseService","constructor","get","url","promise","method","headers","localStorage","getItem","get2","post","data","post2","put","put2","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,MAAtB,QAAoC,iBAApC;AAEA,OAAO,MAAMC,WAAN,CAAkB;AACrBC,EAAAA,WAAW,GAAE;AAAA,SAIbC,GAJa,GAINC,GAAD,IAAS;AACX,UAAIC,OAAO,GAAGP,KAAK,CAAC;AAChBM,QAAAA,GAAG,EAAE,GAAEJ,MAAO,GAAEI,GAAI,EADJ;AAEhBE,QAAAA,MAAM,EAAC,KAFS;AAGhBC,QAAAA,OAAO,EAAC;AACJ,2BAAiB,UAASC,YAAY,CAACC,OAAb,CAAqBV,WAArB,CAAkC;AADxD;AAHQ,OAAD,CAAnB;AAOA,aAAOM,OAAP;AACH,KAbY;;AAAA,SAebK,IAfa,GAeLN,GAAD,IAAS;AACZ,UAAIC,OAAO,GAAGP,KAAK,CAAC;AAChBM,QAAAA,GAAG,EAAE,GAAEJ,MAAO,GAAEI,GAAI,EADJ;AAEhBE,QAAAA,MAAM,EAAC;AAFS,OAAD,CAAnB;AAIA,aAAOD,OAAP;AACH,KArBY;;AAAA,SAuBbM,IAvBa,GAuBN,CAACP,GAAD,EAAKQ,IAAL,KAAc;AACjB,UAAIP,OAAO,GAAGP,KAAK,CAAC;AAChBM,QAAAA,GAAG,EAAE,GAAEJ,MAAO,GAAEI,GAAI,EADJ;AAEhBE,QAAAA,MAAM,EAAC,MAFS;AAGhBM,QAAAA,IAAI,EAACA,IAHW;AAIhBL,QAAAA,OAAO,EAAC;AACJ,2BAAiB,UAASC,YAAY,CAACC,OAAb,CAAqBV,WAArB,CAAkC;AADxD;AAJQ,OAAD,CAAnB;AAQA,aAAOM,OAAP;AACH,KAjCY;;AAAA,SAmCbQ,KAnCa,GAmCL,CAACT,GAAD,EAAKQ,IAAL,KAAc;AAClB,UAAIP,OAAO,GAAGP,KAAK,CAAC;AAChBM,QAAAA,GAAG,EAAE,GAAEJ,MAAO,GAAEI,GAAI,EADJ;AAEhBE,QAAAA,MAAM,EAAC,MAFS;AAGhBM,QAAAA,IAAI,EAACA;AAHW,OAAD,CAAnB;AAMA,aAAOP,OAAP;AACH,KA3CY;;AAAA,SA6CbS,GA7Ca,GA6CP,CAACV,GAAD,EAAKQ,IAAL,KAAc;AAChB,UAAIP,OAAO,GAAGP,KAAK,CAAC;AAChBM,QAAAA,GAAG,EAAE,GAAEJ,MAAO,GAAEI,GAAI,EADJ;AAEhBE,QAAAA,MAAM,EAAC,KAFS;AAGhBM,QAAAA,IAAI,EAACA,IAHW;AAIhBL,QAAAA,OAAO,EAAC;AACJ,2BAAiB,UAASC,YAAY,CAACC,OAAb,CAAqBV,WAArB,CAAkC;AADxD;AAJQ,OAAD,CAAnB;AAQA,aAAOM,OAAP;AACH,KAvDY;;AAAA,SAyDbU,IAzDa,GAyDN,CAACX,GAAD,EAAKQ,IAAL,KAAc;AACjB,UAAIP,OAAO,GAAGP,KAAK,CAAC;AAChBM,QAAAA,GAAG,EAAE,GAAEJ,MAAO,GAAEI,GAAI,EADJ;AAEhBE,QAAAA,MAAM,EAAC,KAFS;AAGhBM,QAAAA,IAAI,EAACA;AAHW,OAAD,CAAnB;AAMA,aAAOP,OAAP;AACH,KAjEY;;AAAA,SAmEbW,MAnEa,GAmEHZ,GAAD,IAAS;AACd,UAAIC,OAAO,GAAGP,KAAK,CAAC;AAChBM,QAAAA,GAAG,EAAE,GAAEJ,MAAO,GAAEI,GAAI,EADJ;AAEhBE,QAAAA,MAAM,EAAC,QAFS;AAGhBC,QAAAA,OAAO,EAAC;AACJ,2BAAiB,UAASC,YAAY,CAACC,OAAb,CAAqBV,WAArB,CAAkC;AADxD;AAHQ,OAAD,CAAnB;AAOA,aAAOM,OAAP;AACH,KA5EY;AAEZ,GAHoB,CAIrB;;;AAJqB","sourcesContent":["import axios from \"axios\"\nimport { ACCESSTOKEN, DOMAIN } from \"../util/setting\"\n\nexport class baseService {\n    constructor(){\n\n    }\n    // PHƯƠNG THỨC GET\n    get = (url) => {\n        let promise = axios({\n            url:`${DOMAIN}${url}`,\n            method:'GET',\n            headers:{\n                'Authorization':`Bearer ${localStorage.getItem(ACCESSTOKEN)}`\n            }\n        });\n        return promise;\n    }\n    // get2: ko cần xác thực đăng nhập\n    get2 = (url) => {\n        let promise = axios({\n            url:`${DOMAIN}${url}`,\n            method:'GET',\n        });\n        return promise;\n    }\n    // PHƯƠNG THỨC POST\n    post = (url,data) => {\n        let promise = axios({\n            url:`${DOMAIN}${url}`,\n            method:'POST',\n            data:data,\n            headers:{\n                'Authorization':`Bearer ${localStorage.getItem(ACCESSTOKEN)}`\n            }\n        }); \n        return promise;\n    }\n    // post2 : ko cần xác thực đăng nhập\n    post2 = (url,data) => {\n        let promise = axios({\n            url:`${DOMAIN}${url}`,\n            method:'POST',\n            data:data,\n            \n        }); \n        return promise;\n    }\n    // PHƯƠNG THỨC PUT\n    put = (url,data) => {\n        let promise = axios({\n            url:`${DOMAIN}${url}`,\n            method:'PUT',\n            data:data,\n            headers:{\n                'Authorization':`Bearer ${localStorage.getItem(ACCESSTOKEN)}`\n            }\n        });\n        return promise;\n    }\n    // put2: ko cần xác thực đăng nhập\n    put2 = (url,data) => {\n        let promise = axios({\n            url:`${DOMAIN}${url}`,\n            method:'PUT',\n            data:data,\n            \n        });\n        return promise;\n    }\n    // PHƯƠNG THỨC DELETE\n    delete = (url) => {\n        let promise = axios({\n            url:`${DOMAIN}${url}`,\n            method:'DELETE',\n            headers:{\n                'Authorization':`Bearer ${localStorage.getItem(ACCESSTOKEN)}`\n            }\n        });\n        return promise;\n    }\n}"]},"metadata":{},"sourceType":"module"}